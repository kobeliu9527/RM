@inject ISqlSugarClient db
@page "/"
@using RM.Shared.Designer
@using RM.Shared.Main
@layout RM.Shared.Main.MainLayout

<div class="d-flex flex-column h-100 w-100">
    <MainToolbar />
 <Button OnClick="aaa">asdf</Button>
    <div class="d-flex flex-row h-100">
        <FormDesigner ContainerData="@ContainerData" />
    </div>
</div>

@code {
    public ContainerDto? ContainerData { get; set; }

    protected override async Task OnInitializedAsync()
    {
        await base.OnInitializedAsync();

        await RunDemoPredefinedContainer();
    }

    private async Task RunDemoDatasource()
    {

    }
    public void aaa()
    {
    
        FunctionPage page = new FunctionPage() { Id=1};
        page.ContainerData = ContainerData;
        var ssss=    db.Updateable(page).ExecuteCommand();
        var ss2 = db.Queryable<FunctionPage>().ToList();
        var ss = Newtonsoft.Json.JsonConvert.SerializeObject(page);

    }
    private async Task RunDemoPredefinedContainer()
    {

        List<List<ComponentDto>> Rows = new List<List<ComponentDto>>()
            {
                new List<ComponentDto>()
                {
                    new ComponentDto(ComponentType.SingleLine)
                    {
                        Label = "Singel Line 1",
                        Width = 5
                    },
                    new ComponentDto(ComponentType.MultiLine)
                    {
                        Label = "Multi Line 1",
                        Width = 3
                    }
                },
                new List<ComponentDto>()
                {
                    new ComponentDto(ComponentType.Number)
                    {
                        Label = "Number 1",
                        Width = 12
                    }
                }
            };
       // var ss = Newtonsoft.Json.JsonConvert.SerializeObject(Rows);
       // List<List<ComponentDto>> sss = Newtonsoft.Json.JsonConvert.DeserializeObject<List<List<ComponentDto>>>(ss);
        FunctionPage page = new FunctionPage();
        page.ContainerData = new ContainerDto(Rows);
       // var ssss=    db.Insertable(page).ExecuteCommand();
        var ss2 = db.Queryable<FunctionPage>().ToList();
        ContainerData = ss2[0].ContainerData;
        //ContainerData = new ContainerDto(sss); 
        await Task.CompletedTask;
    }

}
