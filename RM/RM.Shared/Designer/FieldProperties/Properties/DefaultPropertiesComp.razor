
<div class="prop-group-box" style="min-height:80vh">
    @*<div class="box-header">Defaults(默认通用属性)</div>*@
    <div>
        <Collapse OnCollapseChanged="(aa)=>{   return Task.CompletedTask;}" IsAccordion="true">
            <CollapseItems>
                <CollapseItem Text="Defaults(默认通用属性)" IsCollapsed="false">
                    <div class="padding-8">
                        <div class="form-group">
                            <label for="@ComponentData.Id-label"
                                   class="col-form-label">
                                Label
                            </label>
                            <input id="@ComponentData.Id-label"
                                   class="form-control"
                                   type="text"
                                   required
                                   value="@ComponentData.Label"
                            @oninput="OnLabelChanged" />
                        </div>
                        <div class="form-group">
                            <label for="@ComponentData.Id-width"
                                   class="col-form-label">
                                Width
                            </label>
                            <input id="@ComponentData.Id-width"
                                   class="form-control"
                                   type="number"
                                   min="1"
                                   max="@ComponentUtils.MaxColumnWidth"
                                   required
                                   value="@ComponentData.Width"
                            @oninput="OnWidthChanged" />
                        </div>
                        <div class="form-group">
                            <label for="@ComponentData.Id-height"
                                   class="col-form-label">
                                Height
                            </label>
                            <input id="@ComponentData.Id-height"
                                   class="form-control"
                                   type="number"
                                   required
                                  @bind-value="@ComponentData.Height"
                            @oninput="OnHeightChanged" />
                        </div>
                    </div>
                </CollapseItem>

                <CollapseItem Text="Ext(扩展属性)">
                    @if (ComponentData is not null)
                    {
                        @foreach (var item in @ComponentData.Props)
                        {
                            @switch (item.Value.PType)
                            {
                                case PType.String:
                                    <BootstrapInput ShowLabel="true" DisplayText="@item.Key" @bind-Value="@item.Value.Value"></BootstrapInput>
                                    break;
                                case PType.SingleColor:
                                    <Select ShowLabel="true" DisplayText="@item.Key" Color="Color.Primary" IsClearable="true" Items="ColorItems" @bind-Value="@item.Value.Value"></Select>
                                    break;
                                case PType.Bool:
                                    <Checkbox TValue="bool" DisplayText="@item.Key"
                                              ShowLabel="true" class="form-control"
                                              Color="Color.Danger"
                                              @bind-Value="@(item.Value.BoolVal)"></Checkbox>
                                    break;
                                case PType.Int:
                                    break;
                                case PType.Double:
                                    break;
                                case PType.DataSourse:
                                    @*<Select IsVirtualize="true" @bind-Value="@(ComponentData.Props[""].Value)" OnQueryAsync="OnQueryAsync" ShowLabel="true" DisplayText="@item.Key" Color="Color.Primary" IsClearable="true"></Select>*@
                                    <Select IsVirtualize="true" @bind-Value="@item.Value.Value" OnQueryAsync="OnQueryAsync" ShowLabel="true" DisplayText="@item.Key" Color="Color.Primary" IsClearable="true"></Select>
                                    break;
                                default:
                                    <BootstrapInput ShowLabel="true" DisplayText="@item.Key" @bind-Value="@item.Value.Value"></BootstrapInput>
                                    break;
                            }
                        }
                    }
                </CollapseItem>

            </CollapseItems>
        </Collapse>
    </div>
</div>


