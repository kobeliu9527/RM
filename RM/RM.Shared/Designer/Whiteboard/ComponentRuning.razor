@using RM.Shared.Designer.Whiteboard.Components
@{
    bool isSelectedComponent =
        FormDesigner.IsSelectedComponent(ComponentData);
    string selectedComponentClass = isSelectedComponent ? "component-element--selected" : "";
    string tabsContainerClass = ComponentData?.Type == ComponentType.Tabs ? "container-element" : "";
}

<div class="component-elementruning @Class">
    <div class="widget-wrapper" @onclick="()=>{
;
}">

        @{
            string h = "auto";
            h = ComponentData?.Height <= 0 ? "auto" : ComponentData?.Height + "px";
        }
        <div class="widget-content" style="height:@h" @onclick="()=>{
;
}">
            @switch (ComponentData?.Type)
            {
                case ComponentType.SingleLine:
                    <SingleLineComp Component="@ComponentData" />
                    break;

                case ComponentType.MultiLine:
                    <MultiLineComp Component="@ComponentData" />
                    break;

                case ComponentType.Email:
                    <EmailComp Component="@ComponentData" />
                    break;

                case ComponentType.Link:
                    <LinkComp Component="@ComponentData" />
                    break;

                case ComponentType.Checkbox:
                    <CheckboxComp Component="@ComponentData" />
                    break;

                case ComponentType.Number:
                    <NumberComp Component="@ComponentData" />
                    break;

                case ComponentType.File:
                    <FileComp Component="@ComponentData" />
                    break;

                case ComponentType.DateTime:
                    <DateTimeComp Component="@ComponentData" />
                    break;
                case ComponentType.Select:
                    <SelectComp Component="@ComponentData" />
                    break;
                case ComponentType.Tabs:
                    <TabsCompRuning ComponentData="@ComponentData"
                                    ComponentRow="@ComponentRow"
                                    TabContainerList="@ComponentData.ChildContainers" />
                    break;

                default:
                    throw new NotImplementedException(@$"ComponentType: '{ComponentData?.Type}' is not implemented");
            }
        </div>

  

    </div>
</div>

@code {
    [CascadingParameter(Name = "FormDesigner")]
    public FormRuning FormDesigner { get; set; }

    [Parameter]
    public ContainerDto Container { get; set; }

    [Parameter]
    public ComponentDto ComponentData { get; set; }

    [Parameter]
    public List<ComponentDto> ComponentRow { get; set; }

    [Parameter]
    public int ComponentIndex { get; set; }

    [Parameter]
    public string Class { get; set; }

    private async Task SelectComponentAsync()
    {
        await FormDesigner.SelectComponentAsync(ComponentData);
    }
}
