@* 表示一个轴 *@
@inherits CfgBase<ExAxis>
<div class="cfg axis">
    <div class="over-input">
        <Switch @bind-Value="IsShow" DisplayText="@(Value?.name)" ShowInnerText="true" OffInnerText="详情" OnInnerText="详情"></Switch>
        <Button OnClick="DeletexAxis" Size="Size.ExtraSmall">删除此轴</Button>
    </div>
    @if (IsShow && Value != null)
    {
        <div class="over-input">
            <BootstrapInput @bind-Value="@Value.name" ShowLabel="true" OnValueChanged="async(e)=>{if (string.IsNullOrEmpty(e))
                                                                    {
                                                                        Value.name=null;
                                                                    } await Task.CompletedTask;}"></BootstrapInput>
        </div>
        @* <StringCfg @bind-Value="@Value.name" JsTypes="new List<JsType>(){ JsType.Num,JsType.String,JsType.Function}"></StringCfg> *@
        <div class="over-input">
            <Select @bind-Value="@Value.position" ShowLabel="true" PlaceHolder="默认"></Select>
        </div>

        <div class="over-input">
            <Select @bind-Value="@Value.type" ShowLabel="true" PlaceHolder="默认"></Select>
        </div>
        <NumCfg @bind-Value="Value.gridIndex" DisplayText="所属Grid"></NumCfg>
        <BoolCfg @bind-Value="Value.alignTicks" DisplayText="自动对齐"></BoolCfg>
        <AxisLine @bind-Value="Value.axisLine" DisplayText="轴线配置"></AxisLine>
        <StringCfg JsTypes="new List<JsType>(){ JsType.Array,JsType.Bool}" @bind-Value="Value.boundaryGap" DisplayText="@Value.GetPropertyDisplayName("boundaryGap")" HelpInfo="@Value.GetPropertyDescription("boundaryGap")"></StringCfg>
        <StringCfg JsTypes="new List<JsType>(){ JsType.Num,JsType.String,JsType.Function}" @bind-Value="Value.min" DisplayText="@Value.GetPropertyDisplayName("min")" HelpInfo="@Value.GetPropertyDescription("min")"></StringCfg>
        <StringCfg JsTypes="new List<JsType>(){ JsType.Num,JsType.String,JsType.Function}" @bind-Value="Value.max" DisplayText="@Value.GetPropertyDisplayName("max")" HelpInfo="@Value.GetPropertyDescription("max")"></StringCfg>



    }
</div>
@code {
    public CheckboxState MyProperty { get; set; }
    [Parameter]
    public List<ExAxis>? xAxes { get; set; }

    async Task DeletexAxis()
    {
        bool res = false;
        if (xAxes != null && Value != null)
        {
            res = xAxes.Remove(Value);
        }
        BigScreen?.RefreshHandel?.Invoke(true);
        await Task.CompletedTask;
    }
}
