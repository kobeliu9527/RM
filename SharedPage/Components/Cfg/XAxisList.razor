@inherits CfgBase<EOption>
<div class="cfg">
    <div class="over-input">
        <span>X轴配置:</span>
        <PopConfirmButton OnConfirm="DelsteAllAxis" Size="Size.ExtraSmall" Color="Color.Danger" Content="确认删除所有X轴?">不配置</PopConfirmButton>
        @* <Switch Value="@(Value.xAxis.Count>0)" OnValueChanged="OnValueChanged" ShowLabel="true" DisplayText="@DisplayText" ShowInnerText="true" OffInnerText="不配置" OnInnerText="自定义"></Switch> *@
        <Button OnClick="AddxAxis" Size="Size.ExtraSmall">新增轴</Button>
    </div>
    @if (Value?.xAxis != null && Value?.xAxis.Count > 0)
    {
        @foreach (var item in Value.xAxis)
        {
            <XaxisCfg @key="item" Value="@item" xAxes="Value.xAxis" DisplayText="坐标轴配置"></XaxisCfg>
        }
    }
</div>


@code {
    [Parameter]
    public override string DisplayText { get; set; } = "坐标轴配置";
    async Task OnValueChanged(bool res)
    {
        if (ValueHander != null)
        {
            if (!res)
            {
                ValueHander.xAxis = null;
                BigScreen?.RefreshHandel?.Invoke(true);
                return;
            }
            BigScreen?.RefreshHandel?.Invoke(false);
        }
        await Task.CompletedTask;
    }
    async Task AddxAxis(MouseEventArgs e)
    {
        if (ValueHander != null)
        {
            if (ValueHander.xAxis == null)
            {
                ValueHander.xAxis = new();
            }
            ValueHander.xAxis.Add(new ExAxis());
            IsShow = true;
            await JsOp.Log(BigScreen.SelectedByDesigner);
        }
        BigScreen?.RefreshHandel?.Invoke(true);

        await Task.CompletedTask;
    }
    async Task DelsteAllAxis()
    {
        if (ValueHander != null)
        {
            ValueHander.xAxis = null;
            BigScreen?.RefreshHandel?.Invoke(true);
        }

        await Task.CompletedTask;
    }
}
